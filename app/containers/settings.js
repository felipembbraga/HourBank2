import React, {
  Component,
  View,
  Text,
  StyleSheet
} from 'react-native';

import Touchable from '../components/common/Touchable';

import {connect} from 'react-redux';
import Header from '../components/common/Header';
import * as HBStyleSheet from '../components/common/HBStyleSheet';
import Icon from 'react-native-vector-icons/MaterialIcons';
import moment from 'moment';
import Color from '../resource/color'; //Importa a palheta de cores
import PushNotification from 'react-native-push-notification';

class Settings extends Component {

  handleShowMenu() {
    this.context.openDrawer();
  }

  notification() {

    PushNotification.configure({

        // (optional) Called when Token is generated (iOS and Android)
        onRegister: function(token) {
            console.log( 'TOKEN:', token );
        },

        // (required) Called when a remote or local notification is opened or received
        onNotification: function(notification) {
            console.log( 'NOTIFICATION:', notification );
        },

        // ANDROID ONLY: (optional) GCM Sender ID.
        senderID: "YOUR GCM SENDER ID",

        // IOS ONLY (optional): default: all - Permissions to register.
        permissions: {
            alert: true,
            badge: true,
            sound: true
        },

        // Should the initial notification be popped automatically
        // default: true
        popInitialNotification: true,

        /**
          * IOS ONLY: (optional) default: true
          * - Specified if permissions will requested or not,
          * - if not, you must call PushNotificationsHandler.requestPermissions() later
          */
        requestPermissions: true,
    });

    PushNotification.localNotification({
      /* Android Only Properties */
      id: 0, // (optional) default: Autogenerated Unique ID
      title: "My Notification Title", // (optional)
      ticker: "My Notification Ticker", // (optional)
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"

      /* iOS and Android properties */
      message: "My Notification Message" // (required)
    });
  }

  render() {

    leftItem = {
      title: 'Menu',

      /**
       * Ao passar um numero maior que zero muda
       * o icone indicando que á notificações
       */
      icon: 0
        ? require('../resource/img/hamburger-unread.png')
        : require('../resource/img/hamburger.png'),
      onPress: this.handleShowMenu.bind(this),
    };

    return (
      <View style={styles.container} >
        <Header
          style={styles.header}
          title="Configurações"
          leftItem={leftItem} >
        </Header>

        <Touchable onPress={this.notification.bind(this)}>
              <View>
                <Text>
                  Notificação
                </Text>
              </View>
        </Touchable>

      </View>
    );
  }

}

Settings.contextTypes = {
  openDrawer: React.PropTypes.func,
};

var styles = HBStyleSheet.create({
  container: {
    flex: 1
  },
  header: {
    android: {
      backgroundColor: Color.color.PrimaryColor,
    },
  },
  body: {
    flex: 1
  }
});

// function mapStateToProps(state) {
//     return {
//       fetchData: state.fetchData,
//       user: state.user
//     };
// }

// function mapDispatchToProps(dispatch) {
//   return {
//     changeImageUser: (userId, picture, profile) => dispatch(changeImageUser(userId, picture, profile)),
//     changeProfile: (userId, profile) => {dispatch(changeProfile(userId, profile))}
//   };
// }


export default connect()(Settings);
